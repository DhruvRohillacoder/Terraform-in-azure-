trigger:
- main

pool: 
  name: dhruvagent

# User input parameters
parameters:
  - name: runInit
    type: boolean
    default: true
  - name: runPlan
    type: boolean
    default: true
  - name: runApply
    type: boolean
    default: false

variables:
  terraformWorkingDir: '$(System.DefaultWorkingDirectory)/basic code'
  azureServiceConnection: 'dhruvconection'
  backendResourceGroup: 'tfdhruvrg'
  backendStorageAccount: 'tfdhruvstg'
  backendContainerName: 'tfstate'
  backendKey: 'terraform.tfstate'

steps:
- task: TerraformInstaller@1
  inputs:
    terraformVersion: 'latest'

- task: TerraformTask@5
  displayName: 'ab init hogaa'
  condition: eq('${{ parameters.runInit }}', true)
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(terraformWorkingDir)'
    backendServiceArm: '$(azureServiceConnection)'
    backendAzureRmResourceGroupName: '$(backendResourceGroup)'
    backendAzureRmStorageAccountName: '$(backendStorageAccount)'
    backendAzureRmContainerName: '$(backendContainerName)'
    backendAzureRmKey: '$(backendKey)'

- task: TerraformTask@5
  displayName: 'plan hoga ab'
  condition: eq('${{ parameters.runPlan }}', true)
  inputs:
    provider: 'azurerm'
    command: 'plan'
    workingDirectory: '$(terraformWorkingDir)'
    environmentServiceNameAzureRM: '$(azureServiceConnection)'

- task: TerraformTask@5
  displayName: 'apply hoga ab'
  condition: eq('${{ parameters.runApply }}', true)
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(terraformWorkingDir)'
    commandOptions: '-auto-approve'
    environmentServiceNameAzureRM: '$(azureServiceConnection)'



# trigger:
# - main

# pool: 
#   name: dhruvagent

# variables:
#   terraformWorkingDir: '$(System.DefaultWorkingDirectory)/basic code'
#   azureServiceConnection: 'dhruvconection'
#   backendResourceGroup: 'tfdhruvrg'
#   backendStorageAccount: 'tfdhruvstg'
#   backendContainerName: 'tfstate'
#   backendKey: 'terraform.tfstate'

# steps:
# - task: TerraformInstaller@1
#   inputs:
#     terraformVersion: 'latest'

# - task: TerraformTask@5
#   displayName: 'ab init hogaa'
#   inputs:
#     provider: 'azurerm'
#     command: 'init'
#     workingDirectory: '$(terraformWorkingDir)'
#     backendServiceArm: '$(azureServiceConnection)'
#     backendAzureRmResourceGroupName: '$(backendResourceGroup)'
#     backendAzureRmStorageAccountName: '$(backendStorageAccount)'
#     backendAzureRmContainerName: '$(backendContainerName)'
#     backendAzureRmKey: '$(backendKey)'

# - task: TerraformTask@5
#   displayName: 'plan hoga ab'
#   inputs:
#     provider: 'azurerm'
#     command: 'plan'
#     workingDirectory: '$(terraformWorkingDir)'
#     environmentServiceNameAzureRM: '$(azureServiceConnection)'

# - task: TerraformTask@5
#   displayName: 'apply hoga ab'
#   inputs:
#     provider: 'azurerm'
#     command: 'apply'
#     workingDirectory: '$(terraformWorkingDir)'
#     commandOptions: '-auto-approve'
#     environmentServiceNameAzureRM: '$(azureServiceConnection)'
